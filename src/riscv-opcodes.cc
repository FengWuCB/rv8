//
//  riscv-opcodes.cc
//

#include "riscv-types.h"
#include "riscv-opcodes.h"

const char* riscv_instruction_name[] = {
	"unknown",
	"lui",
	"auipc",
	"jal",
	"jalr",
	"beq",
	"bne",
	"blt",
	"bge",
	"bltu",
	"bgeu",
	"lb",
	"lh",
	"lw",
	"lbu",
	"lhu",
	"sb",
	"sh",
	"sw",
	"addi",
	"slti",
	"sltiu",
	"xori",
	"ori",
	"andi",
	"slli",
	"srli",
	"srai",
	"add",
	"sub",
	"sll",
	"slt",
	"sltu",
	"xor",
	"srl",
	"sra",
	"or",
	"and",
	"fence",
	"fence.i",
	"lwu",
	"ld",
	"sd",
	"slli",
	"srli",
	"srai",
	"addiw",
	"slliw",
	"srliw",
	"sraiw",
	"addw",
	"subw",
	"sllw",
	"srlw",
	"sraw",
	"mul",
	"mulh",
	"mulhsu",
	"mulhu",
	"div",
	"divu",
	"rem",
	"remu",
	"mulw",
	"divw",
	"divuw",
	"remw",
	"remuw",
	"lr.w",
	"sc.w",
	"amoswap.w",
	"amoadd.w",
	"amoxor.w",
	"amoor.w",
	"amoand.w",
	"amomin.w",
	"amomax.w",
	"amominu.w",
	"amomaxu.w",
	"lr.d",
	"sc.d",
	"amoswap.d",
	"amoadd.d",
	"amoxor.d",
	"amoor.d",
	"amoand.d",
	"amomin.d",
	"amomax.d",
	"amominu.d",
	"amomaxu.d",
	"scall",
	"sbreak",
	"sret",
	"sfence.vm",
	"wfi",
	"mrth",
	"mrts",
	"hrts",
	"rdcycle",
	"rdtime",
	"rdinstret",
	"rdcycleh",
	"rdtimeh",
	"rdinstreth",
	"csrrw",
	"csrrs",
	"csrrc",
	"csrrwi",
	"csrrsi",
	"csrrci",
	"flw",
	"fsw",
	"fmadd.s",
	"fmsub.s",
	"fnmsub.s",
	"fnmadd.s",
	"fadd.s",
	"fsub.s",
	"fmul.s",
	"fdiv.s",
	"fsgnj.s",
	"fsgnjn.s",
	"fsgnjx.s",
	"fmin.s",
	"fmax.s",
	"fsqrt.s",
	"fle.s",
	"flt.s",
	"feq.s",
	"fcvt.w.s",
	"fcvt.wu.s",
	"fcvt.s.w",
	"fcvt.s.wu",
	"fmv.x.s",
	"fclass.s",
	"fmv.s.x",
	"fcvt.l.s",
	"fcvt.lu.s",
	"fcvt.s.l",
	"fcvt.s.lu",
	"fld",
	"fsd",
	"fmadd.d",
	"fmsub.d",
	"fnmsub.d",
	"fnmadd.d",
	"fadd.d",
	"fsub.d",
	"fmul.d",
	"fdiv.d",
	"fsgnj.d",
	"fsgnjn.d",
	"fsgnjx.d",
	"fmin.d",
	"fmax.d",
	"fcvt.s.d",
	"fcvt.d.s",
	"fsqrt.d",
	"fle.d",
	"flt.d",
	"feq.d",
	"fcvt.w.d",
	"fcvt.wu.d",
	"fcvt.d.w",
	"fcvt.d.wu",
	"fmv.x.d",
	"fclass.d",
	"fmv.d.x",
	"fcvt.l.d",
	"fcvt.lu.d",
	"fcvt.d.l",
	"fcvt.d.lu",
	"frcsr",
	"frrm",
	"frflags",
	"fscsr",
	"fsrm",
	"fsflags",
	"fsrmi",
	"fsflagsi",
	"c.addi4spn",
	"c.fld",
	"c.lw",
	"c.flw",
	"c.fsd",
	"c.sw",
	"c.fsw",
	"c.nop",
	"c.addi",
	"c.jal",
	"c.li",
	"c.lui",
	"c.addi16sp",
	"c.srli",
	"c.srai",
	"c.andi",
	"c.sub",
	"c.xor",
	"c.or",
	"c.and",
	"c.subw",
	"c.addw",
	"c.j",
	"c.beqz",
	"c.bnez",
	"c.slli",
	"c.fldsp",
	"c.lwsp",
	"c.flwsp",
	"c.jr",
	"c.mv",
	"c.ebreak",
	"c.jalr",
	"c.add",
	"c.fsdsp",
	"c.swsp",
	"c.fswsp",
	"c.ld",
	"c.sd",
	"c.addiw",
	"c.ldsp",
	"c.sdsp",
};

const riscv_inst_type riscv_instruction_type[] = {
	riscv_inst_type_unknown,
	riscv_inst_type_u,
	riscv_inst_type_u,
	riscv_inst_type_uj,
	riscv_inst_type_i,
	riscv_inst_type_sb,
	riscv_inst_type_sb,
	riscv_inst_type_sb,
	riscv_inst_type_sb,
	riscv_inst_type_sb,
	riscv_inst_type_sb,
	riscv_inst_type_i_l,
	riscv_inst_type_i_l,
	riscv_inst_type_i_l,
	riscv_inst_type_i_l,
	riscv_inst_type_i_l,
	riscv_inst_type_s,
	riscv_inst_type_s,
	riscv_inst_type_s,
	riscv_inst_type_i,
	riscv_inst_type_i,
	riscv_inst_type_i,
	riscv_inst_type_i,
	riscv_inst_type_i,
	riscv_inst_type_i,
	riscv_inst_type_i_sh5,
	riscv_inst_type_i_sh5,
	riscv_inst_type_i_sh5,
	riscv_inst_type_r,
	riscv_inst_type_r,
	riscv_inst_type_r,
	riscv_inst_type_r,
	riscv_inst_type_r,
	riscv_inst_type_r,
	riscv_inst_type_r,
	riscv_inst_type_r,
	riscv_inst_type_r,
	riscv_inst_type_r,
	riscv_inst_type_i_none,
	riscv_inst_type_i_none,
	riscv_inst_type_i_l,
	riscv_inst_type_i_l,
	riscv_inst_type_s,
	riscv_inst_type_i_sh6,
	riscv_inst_type_i_sh6,
	riscv_inst_type_i_sh6,
	riscv_inst_type_i,
	riscv_inst_type_i_sh5,
	riscv_inst_type_i_sh5,
	riscv_inst_type_i_sh5,
	riscv_inst_type_r,
	riscv_inst_type_r,
	riscv_inst_type_r,
	riscv_inst_type_r,
	riscv_inst_type_r,
	riscv_inst_type_r,
	riscv_inst_type_r,
	riscv_inst_type_r,
	riscv_inst_type_r,
	riscv_inst_type_r,
	riscv_inst_type_r,
	riscv_inst_type_r,
	riscv_inst_type_r,
	riscv_inst_type_r,
	riscv_inst_type_r,
	riscv_inst_type_r,
	riscv_inst_type_r,
	riscv_inst_type_r,
	riscv_inst_type_r_l,
	riscv_inst_type_r_a,
	riscv_inst_type_r_a,
	riscv_inst_type_r_a,
	riscv_inst_type_r_a,
	riscv_inst_type_r_a,
	riscv_inst_type_r_a,
	riscv_inst_type_r_a,
	riscv_inst_type_r_a,
	riscv_inst_type_r_a,
	riscv_inst_type_r_a,
	riscv_inst_type_r_l,
	riscv_inst_type_r_a,
	riscv_inst_type_r_a,
	riscv_inst_type_r_a,
	riscv_inst_type_r_a,
	riscv_inst_type_r_a,
	riscv_inst_type_r_a,
	riscv_inst_type_r_a,
	riscv_inst_type_r_a,
	riscv_inst_type_r_a,
	riscv_inst_type_r_a,
	riscv_inst_type_i_none,
	riscv_inst_type_i_none,
	riscv_inst_type_i_none,
	riscv_inst_type_i_none,
	riscv_inst_type_i_none,
	riscv_inst_type_i_none,
	riscv_inst_type_i_none,
	riscv_inst_type_i_none,
	riscv_inst_type_i_csr,
	riscv_inst_type_i_csr,
	riscv_inst_type_i_csr,
	riscv_inst_type_i_csr,
	riscv_inst_type_i_csr,
	riscv_inst_type_i_csr,
	riscv_inst_type_i_csr,
	riscv_inst_type_i_csr,
	riscv_inst_type_i_csr,
	riscv_inst_type_i_csri,
	riscv_inst_type_i_csri,
	riscv_inst_type_i_csri,
	riscv_inst_type_i_lf,
	riscv_inst_type_s_f,
	riscv_inst_type_r_4f,
	riscv_inst_type_r_4f,
	riscv_inst_type_r_4f,
	riscv_inst_type_r_4f,
	riscv_inst_type_r_3f,
	riscv_inst_type_r_3f,
	riscv_inst_type_r_3f,
	riscv_inst_type_r_3f,
	riscv_inst_type_r_3f,
	riscv_inst_type_r_3f,
	riscv_inst_type_r_3f,
	riscv_inst_type_r_3f,
	riscv_inst_type_r_3f,
	riscv_inst_type_r_3f,
	riscv_inst_type_r_rff,
	riscv_inst_type_r_rff,
	riscv_inst_type_r_rff,
	riscv_inst_type_r_rf,
	riscv_inst_type_r_rf,
	riscv_inst_type_r_fr,
	riscv_inst_type_r_fr,
	riscv_inst_type_r_rf,
	riscv_inst_type_r_rf,
	riscv_inst_type_r_fr,
	riscv_inst_type_r_rf,
	riscv_inst_type_r_rf,
	riscv_inst_type_r_fr,
	riscv_inst_type_r_fr,
	riscv_inst_type_i_lf,
	riscv_inst_type_s_f,
	riscv_inst_type_r_4f,
	riscv_inst_type_r_4f,
	riscv_inst_type_r_4f,
	riscv_inst_type_r_4f,
	riscv_inst_type_r_3f,
	riscv_inst_type_r_3f,
	riscv_inst_type_r_3f,
	riscv_inst_type_r_3f,
	riscv_inst_type_r_3f,
	riscv_inst_type_r_3f,
	riscv_inst_type_r_3f,
	riscv_inst_type_r_3f,
	riscv_inst_type_r_3f,
	riscv_inst_type_r_ff,
	riscv_inst_type_r_ff,
	riscv_inst_type_r_ff,
	riscv_inst_type_r_rff,
	riscv_inst_type_r_rff,
	riscv_inst_type_r_rff,
	riscv_inst_type_r_rf,
	riscv_inst_type_r_rf,
	riscv_inst_type_r_fr,
	riscv_inst_type_r_fr,
	riscv_inst_type_r_rf,
	riscv_inst_type_r_rf,
	riscv_inst_type_r_fr,
	riscv_inst_type_r_rf,
	riscv_inst_type_r_rf,
	riscv_inst_type_r_fr,
	riscv_inst_type_r_fr,
	riscv_inst_type_i_csr,
	riscv_inst_type_i_csr,
	riscv_inst_type_i_csr,
	riscv_inst_type_i_csr,
	riscv_inst_type_i_csr,
	riscv_inst_type_i_csr,
	riscv_inst_type_i_csri,
	riscv_inst_type_i_csri,
	riscv_inst_type_ciw_4spn,
	riscv_inst_type_cl_fld,
	riscv_inst_type_cl_lw,
	riscv_inst_type_cl_flw,
	riscv_inst_type_cs_fsd,
	riscv_inst_type_cs_sw,
	riscv_inst_type_cs_fsw,
	riscv_inst_type_c_none,
	riscv_inst_type_ci,
	riscv_inst_type_cj,
	riscv_inst_type_ci_li,
	riscv_inst_type_ci_lui,
	riscv_inst_type_ci_16sp,
	riscv_inst_type_cb,
	riscv_inst_type_cb,
	riscv_inst_type_cb,
	riscv_inst_type_cs,
	riscv_inst_type_cs,
	riscv_inst_type_cs,
	riscv_inst_type_cs,
	riscv_inst_type_cs,
	riscv_inst_type_cs,
	riscv_inst_type_cj,
	riscv_inst_type_cb,
	riscv_inst_type_cb,
	riscv_inst_type_ci,
	riscv_inst_type_ci_fldsp,
	riscv_inst_type_ci_lwsp,
	riscv_inst_type_ci_flwsp,
	riscv_inst_type_cr_jr,
	riscv_inst_type_cr,
	riscv_inst_type_c_none,
	riscv_inst_type_cr_jalr,
	riscv_inst_type_cr,
	riscv_inst_type_css_fsdsp,
	riscv_inst_type_css_swsp,
	riscv_inst_type_css_fswsp,
	riscv_inst_type_cl_ld,
	riscv_inst_type_cs_sd,
	riscv_inst_type_ci,
	riscv_inst_type_ci_ldsp,
	riscv_inst_type_css_sdsp,
};

const riscv_wu riscv_instruction_match[] = {
	0x00000000,
	0x00000037,
	0x00000017,
	0x0000006f,
	0x00000067,
	0x00000063,
	0x00001063,
	0x00004063,
	0x00005063,
	0x00006063,
	0x00007063,
	0x00000003,
	0x00001003,
	0x00002003,
	0x00004003,
	0x00005003,
	0x00000023,
	0x00001023,
	0x00002023,
	0x00000013,
	0x00002013,
	0x00003013,
	0x00004013,
	0x00006013,
	0x00007013,
	0x00001013,
	0x00005013,
	0x40005013,
	0x00000033,
	0x40000033,
	0x00001033,
	0x00002033,
	0x00003033,
	0x00004033,
	0x00005033,
	0x40005033,
	0x00006033,
	0x00007033,
	0x0000000f,
	0x0000100f,
	0x00006003,
	0x00003003,
	0x00003023,
	0x00001013,
	0x00005013,
	0x40005013,
	0x0000001b,
	0x0000101b,
	0x0000501b,
	0x4000501b,
	0x0000003b,
	0x4000003b,
	0x0000103b,
	0x0000503b,
	0x4000503b,
	0x02000033,
	0x02001033,
	0x02002033,
	0x02003033,
	0x02004033,
	0x02005033,
	0x02006033,
	0x02007033,
	0x0200003b,
	0x0200403b,
	0x0200503b,
	0x0200603b,
	0x0200703b,
	0x1000202f,
	0x1800202f,
	0x0800202f,
	0x0000202f,
	0x2000202f,
	0x4000202f,
	0x6000202f,
	0x8000202f,
	0xa000202f,
	0xc000202f,
	0xe000202f,
	0x1000302f,
	0x1800302f,
	0x0800302f,
	0x0000302f,
	0x2000302f,
	0x4000302f,
	0x6000302f,
	0x8000302f,
	0xa000302f,
	0xc000302f,
	0xe000302f,
	0x00000073,
	0x00100073,
	0x10000073,
	0x10100073,
	0x10200073,
	0x30600073,
	0x30500073,
	0x20500073,
	0xc0002073,
	0xc0102073,
	0xc0202073,
	0xc8002073,
	0xc8102073,
	0xc8202073,
	0x00001073,
	0x00002073,
	0x00003073,
	0x00005073,
	0x00006073,
	0x00007073,
	0x00002007,
	0x00002027,
	0x00000043,
	0x00000047,
	0x0000004b,
	0x0000004f,
	0x00000053,
	0x08000053,
	0x10000053,
	0x18000053,
	0x20000053,
	0x20001053,
	0x20002053,
	0x28000053,
	0x28001053,
	0x58000053,
	0xa0000053,
	0xa0001053,
	0xa0002053,
	0xc0000053,
	0xc0100053,
	0xd0000053,
	0xd0100053,
	0xe0000053,
	0xe0001053,
	0xf0000053,
	0xc0200053,
	0xc0300053,
	0xd0200053,
	0xd0300053,
	0x00003007,
	0x00003027,
	0x02000043,
	0x02000047,
	0x0200004b,
	0x0200004f,
	0x02000053,
	0x0a000053,
	0x12000053,
	0x1a000053,
	0x22000053,
	0x22001053,
	0x22002053,
	0x2a000053,
	0x2a001053,
	0x40100053,
	0x42000053,
	0x5a000053,
	0xa2000053,
	0xa2001053,
	0xa2002053,
	0xc2000053,
	0xc2100053,
	0xd2000053,
	0xd2100053,
	0xe2000053,
	0xe2001053,
	0xf2000053,
	0xc2200053,
	0xc2300053,
	0xd2200053,
	0xd2300053,
	0x00302073,
	0x00202073,
	0x00102073,
	0x00301073,
	0x00201073,
	0x00101073,
	0x00205073,
	0x00105073,
	0x00000000,
	0x00002000,
	0x00004000,
	0x00006000,
	0x0000a000,
	0x0000c000,
	0x0000e000,
	0x00000001,
	0x00000001,
	0x00002001,
	0x00004001,
	0x00006001,
	0x00006101,
	0x00008001,
	0x00008401,
	0x00008801,
	0x00008c01,
	0x00008c21,
	0x00008c41,
	0x00008c61,
	0x00009c01,
	0x00009c21,
	0x0000a001,
	0x0000c001,
	0x0000e001,
	0x00000002,
	0x00002002,
	0x00004002,
	0x00006002,
	0x00008002,
	0x00008002,
	0x00009002,
	0x00009002,
	0x00009002,
	0x0000a002,
	0x0000c002,
	0x0000e002,
	0x00006000,
	0x0000e000,
	0x00002001,
	0x00006002,
	0x0000e002,
};

const riscv_wu riscv_instruction_mask[] = {
	0x00000000,
	0x0000007f,
	0x0000007f,
	0x0000007f,
	0x0000707f,
	0x0000707f,
	0x0000707f,
	0x0000707f,
	0x0000707f,
	0x0000707f,
	0x0000707f,
	0x0000707f,
	0x0000707f,
	0x0000707f,
	0x0000707f,
	0x0000707f,
	0x0000707f,
	0x0000707f,
	0x0000707f,
	0x0000707f,
	0x0000707f,
	0x0000707f,
	0x0000707f,
	0x0000707f,
	0x0000707f,
	0xfe00707f,
	0xfe00707f,
	0xfe00707f,
	0xfe00707f,
	0xfe00707f,
	0xfe00707f,
	0xfe00707f,
	0xfe00707f,
	0xfe00707f,
	0xfe00707f,
	0xfe00707f,
	0xfe00707f,
	0xfe00707f,
	0x0000707f,
	0x0000707f,
	0x0000707f,
	0x0000707f,
	0x0000707f,
	0xfc00707f,
	0xfc00707f,
	0xfc00707f,
	0x0000707f,
	0xfe00707f,
	0xfe00707f,
	0xfe00707f,
	0xfe00707f,
	0xfe00707f,
	0xfe00707f,
	0xfe00707f,
	0xfe00707f,
	0xfe00707f,
	0xfe00707f,
	0xfe00707f,
	0xfe00707f,
	0xfe00707f,
	0xfe00707f,
	0xfe00707f,
	0xfe00707f,
	0xfe00707f,
	0xfe00707f,
	0xfe00707f,
	0xfe00707f,
	0xfe00707f,
	0xf9f0707f,
	0xf800707f,
	0xf800707f,
	0xf800707f,
	0xf800707f,
	0xf800707f,
	0xf800707f,
	0xf800707f,
	0xf800707f,
	0xf800707f,
	0xf800707f,
	0xf9f0707f,
	0xf800707f,
	0xf800707f,
	0xf800707f,
	0xf800707f,
	0xf800707f,
	0xf800707f,
	0xf800707f,
	0xf800707f,
	0xf800707f,
	0xf800707f,
	0xffffffff,
	0xffffffff,
	0xffffffff,
	0xfff07fff,
	0xffffffff,
	0xffffffff,
	0xffffffff,
	0xffffffff,
	0xfffff07f,
	0xfffff07f,
	0xfffff07f,
	0xfffff07f,
	0xfffff07f,
	0xfffff07f,
	0x0000707f,
	0x0000707f,
	0x0000707f,
	0x0000707f,
	0x0000707f,
	0x0000707f,
	0x0000707f,
	0x0000707f,
	0x0600007f,
	0x0600007f,
	0x0600007f,
	0x0600007f,
	0xfe00007f,
	0xfe00007f,
	0xfe00007f,
	0xfe00007f,
	0xfe00707f,
	0xfe00707f,
	0xfe00707f,
	0xfe00707f,
	0xfe00707f,
	0xfff0007f,
	0xfe00707f,
	0xfe00707f,
	0xfe00707f,
	0xfff0007f,
	0xfff0007f,
	0xfff0007f,
	0xfff0007f,
	0xfff0707f,
	0xfff0707f,
	0xfff0707f,
	0xfff0007f,
	0xfff0007f,
	0xfff0007f,
	0xfff0007f,
	0x0000707f,
	0x0000707f,
	0x0600007f,
	0x0600007f,
	0x0600007f,
	0x0600007f,
	0xfe00007f,
	0xfe00007f,
	0xfe00007f,
	0xfe00007f,
	0xfe00707f,
	0xfe00707f,
	0xfe00707f,
	0xfe00707f,
	0xfe00707f,
	0xfff0007f,
	0xfff0007f,
	0xfff0007f,
	0xfe00707f,
	0xfe00707f,
	0xfe00707f,
	0xfff0007f,
	0xfff0007f,
	0xfff0007f,
	0xfff0007f,
	0xfff0707f,
	0xfff0707f,
	0xfff0707f,
	0xfff0007f,
	0xfff0007f,
	0xfff0007f,
	0xfff0007f,
	0xfffff07f,
	0xfffff07f,
	0xfffff07f,
	0xfff0707f,
	0xfff0707f,
	0xfff0707f,
	0xfff0707f,
	0xfff0707f,
	0x0000e003,
	0x0000e003,
	0x0000e003,
	0x0000e003,
	0x0000e003,
	0x0000e003,
	0x0000e003,
	0x0000ffff,
	0x0000e003,
	0x0000e003,
	0x0000e003,
	0x0000e003,
	0x0000ef83,
	0x0000ec03,
	0x0000ec03,
	0x0000ec03,
	0x0000fc63,
	0x0000fc63,
	0x0000fc63,
	0x0000fc63,
	0x0000fc63,
	0x0000fc63,
	0x0000e003,
	0x0000e003,
	0x0000e003,
	0x0000e003,
	0x0000e003,
	0x0000e003,
	0x0000e003,
	0x0000f07f,
	0x0000f003,
	0x0000ffff,
	0x0000f07f,
	0x0000f003,
	0x0000e003,
	0x0000e003,
	0x0000e003,
	0x0000e003,
	0x0000e003,
	0x0000e003,
	0x0000e003,
	0x0000e003,
};

